{"meta":{"title":"Junhui Jiang","subtitle":"","description":"","author":"Junhui","url":"http://yoursite.com","root":"/"},"pages":[{"title":"archives","date":"2020-03-02T14:11:21.000Z","updated":"2020-03-23T10:18:06.176Z","comments":true,"path":"archives/index.html","permalink":"http://yoursite.com/archives/index.html","excerpt":"","text":""},{"title":"Paper","date":"2020-03-23T10:17:05.000Z","updated":"2020-03-23T10:17:05.209Z","comments":true,"path":"paperlist/index.html","permalink":"http://yoursite.com/paperlist/index.html","excerpt":"","text":""},{"title":"about","date":"2020-03-23T10:26:44.000Z","updated":"2020-03-23T10:48:43.814Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"Jiang, JunhuiPh.D. student in Connect Smart System Lab., Divison of Electrical Engineering, Hanyang University, South Korea. B.S. degree in School of Electrical And Electronic Engineering, Harbin University of Science And Technology, China Contact Address: 55 Hanyangdeahak-ro, Sangrok-gu,Ansan Gyeonggi-do,15588,Korea, Hanyang University, 4th Engineering Dep.407th Email: 0229ender@gmail.com Phone: +82-010-3055-5556 ResearchMy research interests include Industrial Communication, Industrial IoT, and Smart Manufacturing. Here is my Google scholar"}],"posts":[{"title":"OMNET++ 5.5.1 安装步骤以及部署INET和CoRE4INET仿真框架[TSN Simulation/TSN仿真]","slug":"OMNET++ 5.5.1 安装步骤以及部署INET和CoRE4INET仿真框架","date":"2020-03-27T04:37:05.538Z","updated":"2020-03-27T04:46:27.917Z","comments":true,"path":"2020/03/27/OMNET++ 5.5.1 安装步骤以及部署INET和CoRE4INET仿真框架/","link":"","permalink":"http://yoursite.com/2020/03/27/OMNET++%205.5.1%20%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%BB%A5%E5%8F%8A%E9%83%A8%E7%BD%B2INET%E5%92%8CCoRE4INET%E4%BB%BF%E7%9C%9F%E6%A1%86%E6%9E%B6/","excerpt":"OMNET++ 5.5.1 安装步骤以及部署INET和CoRE4INET仿真框架[TSN Simulation/TSN仿真]因为我的目的是要使用CoRE4INET, 所以查看CoRE4INET的对软件版本的支持需求（如图1），确定OMNET++版本是 5.5.1，INET版本3.6.7 （3.6.7是对上一个版本的稳定性更新，所以这使用3.6.7也会兼容3.6.6，但是如果版本相差太大，会导致编译出错） 图1：安装需求 图片来源： CoRE4INET Github Access 2020. 03.25 根据OMNET++提供的installation manual version 5.5.1对照相应的操作系统（e.g.,Ubuntu）然后安装即可。 这里需要注意的是，如果你安装的是旧版本的OMNET++，如，OMNET++ 5.0，就不能依照V5.5.1的installation manual安装，而是需要找到5.0的installation manual（当然是废话，但初学者还是会犯错，注意版本注意版本！），其中最大的不同就是QT的版本，5.0支持的qt4-default, 而之后的OMNET++只支持qt5-default 话不多说，如果你是ubuntu 16.04 或 ubuntu 18.04，则完全可以依照我的顺序和步骤去部署你的仿真环境。 本文分成以下三章： A. 安装OMNET++ 5.5.1 安装编译依赖库和依赖包 下载并解压OMNET++ 部署OMNET++环境并编译 B. 安装INET &amp; CoRE4INE框架 下载并解压INET 下载解压CoRE4INET 编译 A. 安装OMNET++ 5.5.1 安装编译依赖库和依赖包 按顺序执行以下命令： 1sudo apt-get update 1sudo apt-get install build-essential gcc g++ bison flex perl python python3 qt5-default libqt5opengl5-dev tcl-dev tk-dev libxml2-dev zlib1g-dev default-jre doxygen graphviz libwebkitgtk-3.0-0 1sudo add-apt-repository ppa:ubuntugis&#x2F;ppa sudo apt-get update sudo apt-get install openscenegraph-plugin-osgearth libosgearth-dev 1sudo apt-get install openmpi-bin libopenmpi-dev 下载并解压OMNET++ 1ipfs get &#x2F;ipns&#x2F;ipfs.omnetpp.org&#x2F;release&#x2F;5.5.1&#x2F;omnetpp-5.5.1-src-linux.tgz 也可以自行去官网下载，重点注意：OMNET++的版本和你所用到框架的版本一定要匹配！！！ 否则，编译框架时，会有各种报错，让你怀疑人生… 然后解压OMNET++，并且cd到OMNET++的解压目录，然后执行以下命令： 1. setenv 12pwd #查看当前目录路径gedit ~&#x2F;.bashrc 在最后一行添加OMNET++ bin 文件夹的安装路径，例如： 1export PATH&#x3D;$PATH:&#x2F;home&#x2F;junhui&#x2F;simulation_workspace&#x2F;omnetpp-5.5.1&#x2F;bin 重启当前终端窗口，然后执行： 1.&#x2F;configure 1make 等待，直到如下图： 大概14分钟的编译就可以完成安装了。 B. 安装INET &amp; CoRE4INE框架 下载并解压INET https://inet.omnetpp.org/Download.html 选择相应的版本下载即可，我选用的是INET 3.6.7，下载完成，新建一个文件夹作为仿真的工作空间，所有的仿真框架和源码都会集中存储在这个工作空间当中。 下载并解压CoRE4INET git clone https://github.com/CoRE-RG/CoRE4INET 不要直接去github dowload？ 步骤同上，注意需要将CoRE4INET与INET放入同一个工作空间。 编译 编译可以用IDE也可以用命令行，因为之前用OMNET++5.0的时候，只有命令行编译不出错，用IDE编译会各种报错，很奇怪。 我这里沿用之前自己的方法，IDE+命令行 打开IDE，i.e., 在命令行输入 1omnetpp IDE启动，首次启动会需要选择工作空间的目录，选择我们之前建立好的工作空间即可。 然后，import框架，这里说一下，为什么没有选IDE自动在线安装，还是老生常谈，经验.. 在线安装以后，编译可能会各种报错.. 为了省事，直接import，如下图： 先导入INET，然后倒入CoRE4INET 这里有两种方法，IDE编译和命令行编译，我先讲IDE编译，之前用过的OMET++5.0， INET3.2 只有在命令行编译不报错。 然后等待，直到IDE右下方的，C/C++ Indexer完成，如下图 然后右键分别点两个项目，把编译配置成release模式：（命令行用 make MODE=release）如下图 注意，两个框架要一致！！要么都是debug模式，要么都是release模式，后者编译速度比较快。CoRE4INET的project reference 要选择同目录下的inet，当然如果按之前的步骤进行的话，这步选择会自动完成，不需要手动操作 然后选build all 或者热键Ctrl+B，然后等待即可 下面简要记录命令行编译： 1234567891011cd inetmake makefilesmake MODE&#x3D;releasecd CoRE4INETmake makefilesmake MODE&#x3D;release 然后在IDE使用即可，不要用IDE再次进行编译！ 2020年3月27日13:31:23 At Lab","text":"OMNET++ 5.5.1 安装步骤以及部署INET和CoRE4INET仿真框架[TSN Simulation/TSN仿真]因为我的目的是要使用CoRE4INET, 所以查看CoRE4INET的对软件版本的支持需求（如图1），确定OMNET++版本是 5.5.1，INET版本3.6.7 （3.6.7是对上一个版本的稳定性更新，所以这使用3.6.7也会兼容3.6.6，但是如果版本相差太大，会导致编译出错） 图1：安装需求 图片来源： CoRE4INET Github Access 2020. 03.25 根据OMNET++提供的installation manual version 5.5.1对照相应的操作系统（e.g.,Ubuntu）然后安装即可。 这里需要注意的是，如果你安装的是旧版本的OMNET++，如，OMNET++ 5.0，就不能依照V5.5.1的installation manual安装，而是需要找到5.0的installation manual（当然是废话，但初学者还是会犯错，注意版本注意版本！），其中最大的不同就是QT的版本，5.0支持的qt4-default, 而之后的OMNET++只支持qt5-default 话不多说，如果你是ubuntu 16.04 或 ubuntu 18.04，则完全可以依照我的顺序和步骤去部署你的仿真环境。 本文分成以下三章： A. 安装OMNET++ 5.5.1 安装编译依赖库和依赖包 下载并解压OMNET++ 部署OMNET++环境并编译 B. 安装INET &amp; CoRE4INE框架 下载并解压INET 下载解压CoRE4INET 编译 A. 安装OMNET++ 5.5.1 安装编译依赖库和依赖包 按顺序执行以下命令： 1sudo apt-get update 1sudo apt-get install build-essential gcc g++ bison flex perl python python3 qt5-default libqt5opengl5-dev tcl-dev tk-dev libxml2-dev zlib1g-dev default-jre doxygen graphviz libwebkitgtk-3.0-0 1sudo add-apt-repository ppa:ubuntugis&#x2F;ppa sudo apt-get update sudo apt-get install openscenegraph-plugin-osgearth libosgearth-dev 1sudo apt-get install openmpi-bin libopenmpi-dev 下载并解压OMNET++ 1ipfs get &#x2F;ipns&#x2F;ipfs.omnetpp.org&#x2F;release&#x2F;5.5.1&#x2F;omnetpp-5.5.1-src-linux.tgz 也可以自行去官网下载，重点注意：OMNET++的版本和你所用到框架的版本一定要匹配！！！ 否则，编译框架时，会有各种报错，让你怀疑人生… 然后解压OMNET++，并且cd到OMNET++的解压目录，然后执行以下命令： 1. setenv 12pwd #查看当前目录路径gedit ~&#x2F;.bashrc 在最后一行添加OMNET++ bin 文件夹的安装路径，例如： 1export PATH&#x3D;$PATH:&#x2F;home&#x2F;junhui&#x2F;simulation_workspace&#x2F;omnetpp-5.5.1&#x2F;bin 重启当前终端窗口，然后执行： 1.&#x2F;configure 1make 等待，直到如下图： 大概14分钟的编译就可以完成安装了。 B. 安装INET &amp; CoRE4INE框架 下载并解压INET https://inet.omnetpp.org/Download.html 选择相应的版本下载即可，我选用的是INET 3.6.7，下载完成，新建一个文件夹作为仿真的工作空间，所有的仿真框架和源码都会集中存储在这个工作空间当中。 下载并解压CoRE4INET git clone https://github.com/CoRE-RG/CoRE4INET 不要直接去github dowload？ 步骤同上，注意需要将CoRE4INET与INET放入同一个工作空间。 编译 编译可以用IDE也可以用命令行，因为之前用OMNET++5.0的时候，只有命令行编译不出错，用IDE编译会各种报错，很奇怪。 我这里沿用之前自己的方法，IDE+命令行 打开IDE，i.e., 在命令行输入 1omnetpp IDE启动，首次启动会需要选择工作空间的目录，选择我们之前建立好的工作空间即可。 然后，import框架，这里说一下，为什么没有选IDE自动在线安装，还是老生常谈，经验.. 在线安装以后，编译可能会各种报错.. 为了省事，直接import，如下图： 先导入INET，然后倒入CoRE4INET 这里有两种方法，IDE编译和命令行编译，我先讲IDE编译，之前用过的OMET++5.0， INET3.2 只有在命令行编译不报错。 然后等待，直到IDE右下方的，C/C++ Indexer完成，如下图 然后右键分别点两个项目，把编译配置成release模式：（命令行用 make MODE=release）如下图 注意，两个框架要一致！！要么都是debug模式，要么都是release模式，后者编译速度比较快。CoRE4INET的project reference 要选择同目录下的inet，当然如果按之前的步骤进行的话，这步选择会自动完成，不需要手动操作 然后选build all 或者热键Ctrl+B，然后等待即可 下面简要记录命令行编译： 1234567891011cd inetmake makefilesmake MODE&#x3D;releasecd CoRE4INETmake makefilesmake MODE&#x3D;release 然后在IDE使用即可，不要用IDE再次进行编译！ 2020年3月27日13:31:23 At Lab","categories":[{"name":"archives","slug":"archives","permalink":"http://yoursite.com/categories/archives/"}],"tags":[{"name":"TSN simulation","slug":"TSN-simulation","permalink":"http://yoursite.com/tags/TSN-simulation/"}]},{"title":"junhui","slug":"junhui","date":"2020-03-02T14:31:22.000Z","updated":"2020-03-02T14:31:22.240Z","comments":true,"path":"2020/03/02/junhui/","link":"","permalink":"http://yoursite.com/2020/03/02/junhui/","excerpt":"","text":"","categories":[],"tags":[]}]}